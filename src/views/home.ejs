<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Fun Tracker Dashboard</title>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
<style>
/* ===================== CSS ===================== */
* { margin:0; padding:0; box-sizing:border-box; font-family:'Poppins', sans-serif;}
body { background:#121212; color:#fff;}

/* Navbar */
nav{
    display:flex;
    justify-content:space-between;
    align-items:center;
    padding:20px 40px;
    backdrop-filter: blur(10px);
    background: rgba(30,30,30,0.7);
    position: sticky;
    top:0;
    z-index:100;
}
nav h1{ font-weight:600; color:#00ffdd;}
nav .profile{ width:40px; height:40px; border-radius:50%; background:#ff6ec7; cursor:pointer;}

/* Container */
.container{ max-width:1200px; margin:30px auto; padding:0 20px;}

/* Todayâ€™s Tasks */
.today-tasks{
    background:#1e1e1e;
    border-radius:15px;
    padding:20px;
    box-shadow:0 0 25px rgba(0,255,221,0.3);
    margin-bottom:30px;
    max-height:400px;
    overflow-y:auto;
}
.today-tasks h2{ color:#00ffdd; margin-bottom:15px; }
.task-item{
    display:flex;
    justify-content:space-between;
    align-items:center;
    background:#2a2a2a;
    padding:12px 15px;
    border-radius:10px;
    margin-bottom:10px;
    transition: all 0.2s;
}
.task-item:hover{ background:#333; }

.task-item input[type="checkbox"]{
    width:18px;
    height:18px;
    accent-color:#00ffdd;
}

/* Secondary Cards */
.secondary-cards{
    display:grid;
    grid-template-columns: repeat(auto-fit,minmax(250px,1fr));
    gap:20px;
    margin-bottom:30px;
}
.card{
    background:#1e1e1e;
    border-radius:15px;
    padding:20px;
    box-shadow:0 0 20px rgba(0,255,221,0.2);
    transition: transform 0.2s, box-shadow 0.2s;
}
.card:hover{
    transform:translateY(-5px);
    box-shadow:0 0 30px rgba(0,255,221,0.5);
}
.card h2{ color:#00ffdd; margin-bottom:10px;}
.card p{ color:#aaa; margin:5px 0;}

/* Upcoming Events */
.events{
    display:flex;
    gap:15px;
    overflow-x:auto;
    padding:10px 0;
}
.event-card{
    min-width:200px;
    background:#2a2a2a;
    border-radius:12px;
    padding:15px;
    box-shadow:0 0 15px rgba(255,110,199,0.2);
    flex-shrink:0;
}
.event-card h3{ font-size:16px; color:#ff6ec7; margin-bottom:10px;}
.event-card p{ font-size:14px; color:#aaa;}

/* Completed Tasks */
.completed-tasks{ margin-top:20px; }
.completed-tasks h2{ color:#00ffdd; margin-bottom:10px;}
.completed-tasks ul{ list-style:none;}
.completed-tasks li{
    background:#1e1e1e;
    margin-bottom:8px;
    padding:10px 15px;
    border-radius:10px;
    display:flex;
    align-items:center;
    color:#777;
}
.completed-tasks li::before{
    content:'âœ”';
    margin-right:10px;
    color:#00ffdd;
}

/* Quick Add Button */
.add-btn{
    position:fixed;
    bottom:30px;
    right:30px;
    background:linear-gradient(45deg,#00ffdd,#ff6ec7);
    border:none;
    border-radius:50%;
    width:60px;
    height:60px;
    font-size:30px;
    color:#fff;
    cursor:pointer;
    box-shadow:0 0 20px rgba(0,255,221,0.5);
    transition: transform 0.2s, box-shadow 0.2s;
}
.add-btn:hover{ transform:scale(1.1); box-shadow:0 0 30px rgba(0,255,221,0.8); }

/* Footer */
footer{ margin-top:40px; text-align:center; color:#aaa; font-size:14px; }
footer span{ color:#00ffdd; cursor:pointer; }

/* Movies Card */
.movie-card-button{
    display:flex;
    flex-direction:column;
    justify-content:center;
    align-items:center;
    background: #1e1e1e;
    color: #00ffdd;
    text-decoration:none;
    border-radius:15px;
    padding:20px;
    box-shadow:0 0 20px rgba(0,255,221,0.2);
    transition: transform 0.2s, box-shadow 0.2s;
}
.movie-card-button:hover{
    transform:translateY(-5px);
    box-shadow:0 0 30px rgba(0,255,221,0.5);
}
.movie-card-button h2{ margin-bottom:10px; color:#00ffdd; }
.movie-card-button p{ color:#aaa; font-size:14px; }
</style>
</head>
<body>

<!-- Navbar -->
<nav>
    <h1>Fun Tracker</h1>
    <div class="profile"></div>
</nav>

<div class="container">

    <!-- Todayâ€™s Tasks -->
    <div class="today-tasks">
        <h2>Today's Tasks</h2>
        <form id="tasksForm">
        <% if (tasks.length > 0) { %>
            <% tasks.forEach(task => { %>
                <div class="task-item">
                    <span><%= task.title %></span>
                    <input type="checkbox" name="completedTasks[]" value="<%= task._id %>" <%= task.completed ? "checked" : "" %>>
                </div>
            <% }) %>
            <button type="submit" style="margin-top:10px; padding:8px 15px; background:#00ffdd; color:#000; border:none; border-radius:5px; cursor:pointer;">Submit Completed</button>
        <% } else { %>
            <p>No tasks for today ðŸŽ‰</p>
        <% } %>
        </form>
    </div>

    <!-- Secondary Cards -->
    <div class="secondary-cards">
        <div class="card">
            <h2>Streak & Motivation</h2>
            <p> days task completion streak!</p>
        </div>

        <div class="card">
            <h2>Quick Stats</h2>
            <p>Tasks this month:</p>
            <p>Completed streak:</p>
            <p>Pending streak: </p>
        </div>

        <a href="/movies" class="card movie-card-button">
            <h2>ðŸŽ¬ Favorite Movies</h2>
            <p>Click to view & manage your favorite movies</p>
        </a>
    </div>

    <!-- Upcoming Events -->
    <div class="card">
        <h2>Upcoming Events</h2>
        <div class="events">
            <% upcoming.forEach(event => { %>
                <div class="event-card">
                    <h3><%= event.title %></h3>
                    <p><%= event.daysLeft %> days left</p>
                </div>
            <% }) %>
        </div>
        <button class="add-btn" onclick="window.location.href='/add-event'">+</button>
    </div>

    <!-- Recently Completed Tasks -->
    <div class="completed-tasks card">
        <h2>Recently Completed</h2>
        <ul id="completedList">
            <% completedTasks.forEach(task => { %>
                <li><%= task.title %></li>
            <% }) %>
        </ul>
    </div>

</div>

<!-- Quick Add Button -->
<button class="add-btn" onclick="window.location.href='/tasks'">+</button>

<footer>
  Â© 2025 <span id="secret-trigger">Fun Tracker â€¢ Build your productivity, daily!</span>
</footer>

<!-- Hidden Input -->
<input id="secret-capture" 
type="text" 
inputmode="text"
autocomplete="off" 
autocapitalize="off" 
autocorrect="off"
maxlength="20"
style="position:fixed; left:-9999px; top:auto; width:1px; height:1px; opacity:0; pointer-events:none;" />

<script>
// ===================== JS =====================
document.getElementById('tasksForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const completedTasks = formData.getAll('completedTasks[]');
    if (completedTasks.length === 0) {
        alert("Please select at least one task");
        return;
    }
    try {
        const res = await fetch('/complete-tasks', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ completedTasks })
        });
        if (!res.ok) throw new Error("Failed to complete tasks");
        completedTasks.forEach(id => {
            const checkbox = document.querySelector(`input[value="${id}"]`);
            if (checkbox) {
                const taskItem = checkbox.closest('.task-item');
                const title = taskItem.querySelector('span').textContent;
                const li = document.createElement('li');
                li.textContent = title;
                document.getElementById('completedList').prepend(li);
                taskItem.remove();
            }
        });
    } catch (err) {
        console.error(err);
        alert("Error completing tasks");
    }
});

// ===== Secret Code Logic =====
function hashCode(str) {
    let hash = 0;
    for (let i = 0; i < str.length; i++) {
        hash = ((hash << 5) - hash) + str.charCodeAt(i);
        hash |= 0;
    }
    return hash;
}
const secretHash = hashCode("aamm");
const SECRET_LEN = 4;
let typedKeys = [];

// Mobile input focus
function focusHiddenInput() {
    const inp = document.getElementById('secret-capture');
    inp.style.left = '10px';
    inp.focus();
    setTimeout(()=> { inp.style.left = '-9999px'; }, 50);
}

// Only footer click triggers keyboard
document.getElementById('secret-trigger').addEventListener('click', () => {
    focusHiddenInput();
});

// Listen to input
document.getElementById('secret-capture').addEventListener('input', (ev) => {
    const value = ev.target.value || '';
    const lastN = value.slice(-SECRET_LEN);
    typedKeys = lastN.split('').map(c => c.toLowerCase());
    checkSecretBuffer();
    ev.target.value = lastN;
});

// Desktop keyboard fallback
document.addEventListener('keydown', (e) => {
    const el = document.activeElement;
    if (el && (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.isContentEditable)) return;
    const k = (e.key || '').toLowerCase();
    if (!k || k.length !== 1) return;
    typedKeys.push(k);
    if (typedKeys.length > SECRET_LEN) typedKeys.shift();
    checkSecretBuffer();
});

// Check buffer
function checkSecretBuffer() {
    if (typedKeys.length < SECRET_LEN) return;
    const joined = typedKeys.join('');
    if (hashCode(joined) === secretHash) {
        typedKeys = [];
        document.body.style.transition = 'background .5s';
        document.body.style.background = '#020712';
        setTimeout(()=> window.location.href = 'https://noti2.onrender.com', 600);
    }
}
</script>
</body>
</html>
